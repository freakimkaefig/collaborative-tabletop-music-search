<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:p="clr-namespace:Ctms.Presentation.Properties"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:waf="http://waf.codeplex.com/schemas"
    xmlns:vm="clr-namespace:Ctms.Applications.ViewModels;assembly=Ctms.Applications"
    xmlns:s="http://schemas.microsoft.com/surface/2008"         
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:ee="http://schemas.microsoft.com/expression/2010/effects"
    xmlns:c="clr-namespace:Ctms.Presentation.Converters"
    xmlns:gestures="clr-namespace:Blake.NUI.WPF.Gestures;assembly=Blake.NUI.WPF"
    x:Class="Ctms.Presentation.Views.PlaylistView"         
    IsEnabled="{Binding IsEnabled}"
    waf:ValidationHelper.IsValid="{Binding IsValid, Mode=OneWayToSource}">
    
    
    <!--mc:Ignorable="d" d:DataContext="{d:DesignData Source=../DesignData/SamplePersonViewModel.xaml}"
    waf:ValidationHelper.IsEnabled="true" -->
    <!--mc:Ignorable="d" d:DataContext="{d:DesignData Source=../DesignData/SamplePersonViewModel.xaml}"
    waf:ValidationHelper.IsEnabled="true" -->
    <Grid x:Name="grid1" Margin="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" RenderTransformOrigin="0.5,0.5">
    	<Grid.RenderTransform>
    		<TransformGroup>
    			<ScaleTransform/>
    			<SkewTransform/>
    			<RotateTransform/>
    			<TranslateTransform/>
    		</TransformGroup>
    	</Grid.RenderTransform>
    	<VisualStateManager.VisualStateGroups>
    		<VisualStateGroup x:Name="PlaylistViewVisibility">
    			<VisualStateGroup.Transitions>
    				<VisualTransition GeneratedDuration="0:0:0.5">
    					<ei:ExtendedVisualStateManager.TransitionEffect>
    						<ee:FadeTransitionEffect/>
    					</ei:ExtendedVisualStateManager.TransitionEffect>
    				</VisualTransition>
    			</VisualStateGroup.Transitions>
    			<VisualState x:Name="PlaylistViewInvisible"/>
    			<VisualState x:Name="PlaylistViewVisible">
    				<Storyboard>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    					</ObjectAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="surfaceButton2">
    						<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    					</ObjectAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    		</VisualStateGroup>
    		<VisualStateGroup x:Name="PlaylistRotation">
    			<VisualStateGroup.Transitions>
    				<VisualTransition GeneratedDuration="0:0:0.5"/>
    			</VisualStateGroup.Transitions>
    			<VisualState x:Name="Rotate0"/>
    			<VisualState x:Name="Rotate180">
    				<Storyboard>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="grid1">
    						<EasingDoubleKeyFrame KeyTime="0" Value="180"/>
    					</DoubleAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    		</VisualStateGroup>
    	</VisualStateManager.VisualStateGroups>
    
    
    	<VisualStateManager.CustomVisualStateManager>
    		<ei:ExtendedVisualStateManager/>
    	</VisualStateManager.CustomVisualStateManager>
    
    
		<!--mc:Ignorable="d" d:DataContext="{d:DesignData Source=../DesignData/SamplePersonViewModel.xaml}"
    waf:ValidationHelper.IsEnabled="true" -->
    
    
		<!--mc:Ignorable="d" d:DataContext="{d:DesignData Source=../DesignData/SamplePersonViewModel.xaml}"
    waf:ValidationHelper.IsEnabled="true" -->
		<Grid x:Name="grid" Margin="0,0,0,0" Background="Black" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">
			<Grid.RenderTransform>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform/>
					<RotateTransform Angle="0"/>
					<TranslateTransform/>
				</TransformGroup>
			</Grid.RenderTransform>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
			</Grid.ColumnDefinitions>
            <s:SurfaceListBox x:Name="surfaceListBox" Margin="0,120,0,0" Background="#000"
                              ItemTemplate="{StaticResource SurfaceListBoxItemDataTemplate}" ItemsSource="{Binding ResultsForPlaylist}"
                              AllowDrop="True"
                              SelectionChanged="Playlist_SelectionChanged"
                              gestures:Events.HoldGesture="Playlist_HoldGesture"
                              gestures:Events.DoubleTapGesture="surfaceListBox_DoubleTapGesture"
                              s:SurfaceDragDrop.DragCanceled="Playlist_OnDragCanceled"
                              s:SurfaceDragDrop.DragCompleted="Playlist_OnDragCompleted"
                              s:SurfaceDragDrop.DragOver="Playlist_OnDragOver"
                              s:SurfaceDragDrop.DragEnter="Playlist_DragEnter"
                              s:SurfaceDragDrop.DragLeave="Playlist_DragLeave"
                              s:SurfaceDragDrop.Drop="Playlist_Drop"/>
            <s:SurfaceButton Command="{Binding PlayCommand}" Content="PLAY" HorizontalAlignment="Left" VerticalAlignment="Top" Width="80" Height="32" Margin="192,24,0,0"/>
            <s:SurfaceButton Command="{Binding StopCommand}" Content="STOP" HorizontalAlignment="Left" VerticalAlignment="Top" Width="64" Height="38" Margin="304,24,0,0"/>
            <s:SurfaceButton Command="{Binding ShuffleCommand}" Content="{Binding IsShuffle}" HorizontalAlignment="Right" VerticalAlignment="Top" Width="64" Height="38" Margin="0,66,96,0"/>
            <s:SurfaceButton Command="{Binding RepeatCommand}" Content="{Binding IsRepeat}" HorizontalAlignment="Right" VerticalAlignment="Top" Width="64" Height="38" Margin="0,66,16,0"/>
			<Label Content="DETAILVIEW kommt hier her" Grid.Column="1" Margin="296,288,232,504"/>
            <TextBox x:Name="textBox" Width="300" Height="500" Grid.Column="1"/>
            <s:SurfaceButton Grid.Column="1" HorizontalAlignment="Left" Margin="8,24,0,0" VerticalAlignment="Top" Command="{Binding RotateCommand}">
                <Image Opacity="1" Width="80" Height="80" Source="../../Resources/Images/Playlist/rotate-icon.png" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </s:SurfaceButton>
            <Label Content="Shuffle" HorizontalAlignment="Right" Height="24" Margin="0,38,96,0" VerticalAlignment="Top" Width="64"/>
            <Label Content="Repeat" HorizontalAlignment="Right" Height="24" Margin="0,38,16,0" VerticalAlignment="Top" Width="64"/>
        </Grid>
		<s:SurfaceButton x:Name="surfaceButton2" Content="SEARCH" Margin="0" VerticalAlignment="Center" Height="80" HorizontalAlignment="Right" Visibility="Hidden">
			<i:Interaction.Triggers>
				<i:EventTrigger EventName="Click">
					<ei:GoToStateAction StateName="PlaylistViewInvisible"/>
				</i:EventTrigger>
			</i:Interaction.Triggers>
		</s:SurfaceButton>
        <s:SurfaceButton Name="DropTargetRight" Margin="0,0,0.146,0" VerticalAlignment="Center" Height="80" Panel.ZIndex="-1" HorizontalAlignment="Right" Width="80"
                         s:SurfaceDragDrop.DragEnter="PlaylistAddDropTarget_DragEnter"
                         s:SurfaceDragDrop.DragLeave="PlaylistAddDropTarget_DragLeave"
                         s:SurfaceDragDrop.Drop="PlaylistAddDropTarget_Drop"
                         AllowDrop="True">
            <Image Opacity="1" Width="80" Height="80" Source="../../Resources/Images/Playlist/playlist.png" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
            	<Image.RenderTransform>
            		<TransformGroup>
            			<ScaleTransform/>
            			<SkewTransform/>
            			<RotateTransform Angle="90"/>
            			<TranslateTransform/>
            		</TransformGroup>
            	</Image.RenderTransform>
            </Image>
			<i:Interaction.Triggers>
				<i:EventTrigger EventName="Click">
					<ei:GoToStateAction StateName="PlaylistViewVisible"/>
				</i:EventTrigger>
			</i:Interaction.Triggers>
		</s:SurfaceButton>
        <Image Name="PlusImageRight" Opacity="0" Width="60" Height="60" Source="../../Resources/Images/Playlist/plus.png" Margin="200" HorizontalAlignment="Right" VerticalAlignment="Center" Panel.ZIndex="0"/>
        <s:SurfaceButton Name="DropTargetLeft" Margin="0,0,0.146,0" VerticalAlignment="Center" Height="80" Panel.ZIndex="-1" HorizontalAlignment="Left" Width="80"
        	s:SurfaceDragDrop.DragEnter="PlaylistAddDropTarget_DragEnter"
        	s:SurfaceDragDrop.DragLeave="PlaylistAddDropTarget_DragLeave"
        	s:SurfaceDragDrop.Drop="PlaylistAddDropTarget_Drop"
        	AllowDrop="True">
            <Image Opacity="1" Width="80" Height="80" Source="../../Resources/Images/Playlist/playlist.png" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                <Image.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="-90"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Image.RenderTransform>
            </Image>
            <i:Interaction.Triggers>
        		<i:EventTrigger EventName="Click">
        			<ei:GoToStateAction StateName="PlaylistViewVisible"/>
        		</i:EventTrigger>
        	</i:Interaction.Triggers>
        </s:SurfaceButton>
        <Image Name="PlusImageLeft" Opacity="0" Width="60" Height="60" Source="../../Resources/Images/Playlist/plus.png" HorizontalAlignment="Center" VerticalAlignment="Center" Panel.ZIndex="0" Margin="61,562,1799,458"/>
    </Grid>
</UserControl>
