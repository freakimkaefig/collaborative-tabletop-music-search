<UserControl
    x:Name="MenuViewUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:p="clr-namespace:Ctms.Presentation.Properties"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:waf="http://waf.codeplex.com/schemas"
    xmlns:vm="clr-namespace:Ctms.Applications.ViewModels;assembly=Ctms.Applications"
    xmlns:c="clr-namespace:Ctms.Presentation.Converters"
    xmlns:s="http://schemas.microsoft.com/surface/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" x:Class="Ctms.Presentation.Views.MenuView"
    IsEnabled="{Binding IsEnabled}"
    waf:ValidationHelper.IsValid="{Binding IsValid, Mode=OneWayToSource}">
    
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
    </UserControl.Resources>
        <Grid Margin="0,0,0,0">
        
    	<VisualStateManager.VisualStateGroups>
    		<VisualStateGroup x:Name="HideShowMenu">
    			<VisualStateGroup.Transitions>
    				<VisualTransition GeneratedDuration="0:0:0.3"/>
    			</VisualStateGroup.Transitions>
    			<VisualState x:Name="MenuInvisible">
    				<Storyboard>
    					<Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.ZIndex)" Storyboard.TargetName="MenuButton_Hide">
    						<DiscreteInt32KeyFrame KeyTime="0" Value="0"/>
    					</Int32AnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    			<VisualState x:Name="MenuVisible">
    				<Storyboard>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="MenuButton_Hide">
    						<EasingDoubleKeyFrame KeyTime="0" Value="142"/>
    					</DoubleAnimationUsingKeyFrames>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="MenuPanel">
    						<EasingDoubleKeyFrame KeyTime="0" Value="151">
    							<EasingDoubleKeyFrame.EasingFunction>
    								<QuadraticEase EasingMode="EaseInOut"/>
    							</EasingDoubleKeyFrame.EasingFunction>
    						</EasingDoubleKeyFrame>
    					</DoubleAnimationUsingKeyFrames>
    					<Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.ZIndex)" Storyboard.TargetName="MenuButton_Hide">
    						<DiscreteInt32KeyFrame KeyTime="0" Value="1"/>
    					</Int32AnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    		</VisualStateGroup>
    		<VisualStateGroup x:Name="HideShowLogin">
    			<VisualStateGroup.Transitions>
    				<VisualTransition GeneratedDuration="0:0:0.5"/>
    			</VisualStateGroup.Transitions>
    			<VisualState x:Name="LoginDialogInvisible"/>
    			<VisualState x:Name="LoginDialogVisible">
    				<Storyboard>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="LoginDialog">
    						<EasingDoubleKeyFrame KeyTime="0" Value="1320"/>
    					</DoubleAnimationUsingKeyFrames>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="LoginDialog">
    						<EasingDoubleKeyFrame KeyTime="0" Value="-124.833"/>
    					</DoubleAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    		</VisualStateGroup>
    		<VisualStateGroup x:Name="HideShowOpenPlaylist">
    			<VisualStateGroup.Transitions>
    				<VisualTransition GeneratedDuration="0:0:0.5"/>
    			</VisualStateGroup.Transitions>
    			<VisualState x:Name="OpenPlaylistDialogInvisible"/>
    			<VisualState x:Name="OpenPlaylistDialogVisible">
    				<Storyboard>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="OpenPlaylistDialog">
    						<EasingDoubleKeyFrame KeyTime="0" Value="1436"/>
    					</DoubleAnimationUsingKeyFrames>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="OpenPlaylistDialog">
    						<EasingDoubleKeyFrame KeyTime="0" Value="200"/>
    					</DoubleAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    		</VisualStateGroup>
    		<VisualStateGroup x:Name="HideShowNewPlaylist">
    			<VisualStateGroup.Transitions>
    				<VisualTransition GeneratedDuration="0:0:0.5"/>
    			</VisualStateGroup.Transitions>
    			<VisualState x:Name="NewPlaylistDialogInvisible"/>
    			<VisualState x:Name="NewPlaylistDialogVisible">
    				<Storyboard>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="NewPlaylistDialog">
    						<EasingDoubleKeyFrame KeyTime="0" Value="1368"/>
    					</DoubleAnimationUsingKeyFrames>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="NewPlaylistDialog">
    						<EasingDoubleKeyFrame KeyTime="0" Value="528"/>
    					</DoubleAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    		</VisualStateGroup>
            <VisualStateGroup x:Name="LoginRotation">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:0.5"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Rotate0_LoginDialog"/>
                <VisualState x:Name="Rotate180_LoginDialog">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="LoginDialog">
                            <EasingDoubleKeyFrame KeyTime="0" Value="180"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="OpenPlaylistRotation">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:0.5"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Rotate0_OpenPlaylistDialog"/>
                <VisualState x:Name="Rotate180_OpenPlaylistDialog">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="OpenPlaylistDialog">
                            <EasingDoubleKeyFrame KeyTime="0" Value="180"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="CreatePlaylistRotation">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:0.5"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Rotate0_CreatePlaylistDialog"/>
                <VisualState x:Name="Rotate180_CreatePlaylistDialog">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="NewPlaylistDialog">
                            <EasingDoubleKeyFrame KeyTime="0" Value="180"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.ColumnDefinitions>
        	<ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        
        <!--<Label Content="MenuView" Grid.Column="0" Grid.Row="0"/>-->
        <!--<s:SurfaceButton Content="Exit" Grid.Column="0" Width="100" Height="40" Command="{Binding ExitAppCommand}" Margin="1820,0,0,1040" />
        <s:SurfaceButton Content="Login" Grid.Column="0" Width="100" Height="40" Command="{Binding LoginCommand}" Margin="1714,0,106,1040" />-->
<<<<<<< HEAD
        <TextBox Text="{Binding LoginLogMessage}" Width="300" VerticalScrollBarVisibility="Auto" Foreground="Black" TextWrapping="Wrap" IsReadOnly="True" Grid.Column="0" Height="474" VerticalAlignment="Top" />
=======
        <!--<TextBox Text="{Binding LoginLogMessage}" Width="300" VerticalScrollBarVisibility="Auto" Foreground="Black" TextWrapping="Wrap" IsReadOnly="True" Margin="1566,46,0,0" Grid.Column="0" Height="474" VerticalAlignment="Top" />-->
>>>>>>> 4ee8946b0e885fae043f9620ec5762465eb5d493
        <s:SurfaceButton x:Name="MenuButton_Hide" Content="MENU" HorizontalAlignment="Left" Margin="0" Width="80" Height="80" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Bottom">
        	<i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewTouchDown">
        			<ei:GoToStateAction StateName="MenuInvisible"/>
        		</i:EventTrigger>
                <i:EventTrigger EventName="Click">
                    <ei:GoToStateAction StateName="MenuInvisible"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        	<s:SurfaceButton.RenderTransform>
        		<TransformGroup>
        			<ScaleTransform/>
        			<SkewTransform/>
        			<RotateTransform/>
        			<TranslateTransform/>
        		</TransformGroup>
        	</s:SurfaceButton.RenderTransform>
        </s:SurfaceButton>
        <s:SurfaceButton x:Name="MenuButton_Show" Content="MENU" HorizontalAlignment="Left" Margin="0" Width="80" Height="80" VerticalAlignment="Bottom" >
        	<i:Interaction.Triggers>
        		<i:EventTrigger EventName="PreviewTouchDown">
        			<ei:GoToStateAction StateName="MenuVisible"/>
        		</i:EventTrigger>
                <i:EventTrigger EventName="Click">
                    <ei:GoToStateAction StateName="MenuVisible"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </s:SurfaceButton>
        <StackPanel x:Name="MenuPanel" HorizontalAlignment="Left" Margin="-140.5,0,0,0" Width="140" Height="250" RenderTransformOrigin="0.5,0.5" Background="Black" VerticalAlignment="Bottom">
        	<StackPanel.RenderTransform>
        		<TransformGroup>
        			<ScaleTransform/>
        			<SkewTransform/>
        			<RotateTransform/>
        			<TranslateTransform/>
        		</TransformGroup>
        	</StackPanel.RenderTransform>
        	<s:SurfaceButton Content="New Playlist" Margin="0" VerticalAlignment="Bottom" IsEnabled="{Binding IsLoggedIn}">
        		<i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewTouchDown">
                        <ei:GoToStateAction StateName="NewPlaylistDialogVisible"/>
                        <ei:GoToStateAction StateName="MenuInvisible"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Click">
        				<ei:GoToStateAction StateName="NewPlaylistDialogVisible"/>
                        <ei:GoToStateAction StateName="MenuInvisible"/>
        			</i:EventTrigger>
        		</i:Interaction.Triggers>
        	</s:SurfaceButton>
        	<s:SurfaceButton Content="Open Playlist" Margin="0,10,0,0" VerticalAlignment="Bottom" IsEnabled="{Binding IsLoggedIn}">
        		<i:Interaction.Triggers>
        			<i:EventTrigger EventName="PreviewTouchDown">
        				<ei:GoToStateAction StateName="OpenPlaylistDialogVisible"/>
                        <ei:GoToStateAction StateName="MenuInvisible"/>
        			</i:EventTrigger>
                    <i:EventTrigger EventName="Click">
                        <ei:GoToStateAction StateName="OpenPlaylistDialogVisible"/>
                        <ei:GoToStateAction StateName="MenuInvisible"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
        	</s:SurfaceButton>
            <s:SurfaceButton Content="{Binding LoginButtonContent}" Visibility="{Binding CanLogin, Converter={x:Static c:BoolToVisibilityConverter.Default}}" Margin="0,10,0,0" VerticalAlignment="Bottom">
        		<i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewTouchDown">
                        <ei:GoToStateAction StateName="LoginDialogVisible"/>
                        <ei:GoToStateAction StateName="MenuInvisible"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Click">
        				<ei:GoToStateAction StateName="LoginDialogVisible"/>
        				<ei:GoToStateAction StateName="MenuInvisible"/>
        			</i:EventTrigger>
        		</i:Interaction.Triggers>
        	</s:SurfaceButton>
            <s:SurfaceButton Visibility="{Binding IsLoggedIn, Converter={x:Static c:BoolToVisibilityConverter.Default}}" Command="{Binding LogoutCommand}" Content="{Binding LoginButtonContent}" Margin="0,10,0,0" VerticalAlignment="Bottom"></s:SurfaceButton>
            <s:SurfaceButton Content="Exit" Margin="0,20,0,0" VerticalAlignment="Bottom" Command="{Binding ExitAppCommand}"/>
        </StackPanel>
        <Grid x:Name="LoginDialog" HorizontalAlignment="Left" Margin="-976,0,0,136" Width="312" Background="#CC000000" Height="320" VerticalAlignment="Bottom" RenderTransformOrigin="0.5,0.5">
        	<Grid.RenderTransform>
        		<TransformGroup>
        			<ScaleTransform/>
        			<SkewTransform/>
        			<RotateTransform/>
        			<TranslateTransform/>
        		</TransformGroup>
        	</Grid.RenderTransform>
            <s:SurfaceButton HorizontalAlignment="Right" Margin="0" VerticalAlignment="Top" Command="{Binding RotateLoginDialogCommand}" Height="60" Width="60">
                <Image Opacity="1" Width="60" Height="60" Source="../../Resources/Images/Playlist/rotate-icon.png" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </s:SurfaceButton>
        	<TextBlock Margin="0" TextWrapping="Wrap" VerticalAlignment="Top" HorizontalAlignment="Center" FontSize="18.667"><Run Language="de-de" Text="Login to Spotify"/></TextBlock>
        	<TextBlock HorizontalAlignment="Left" Margin="20,72,0,0" TextWrapping="Wrap" VerticalAlignment="Top"><Run Language="de-de" Text="Username"/></TextBlock>
        	<TextBlock HorizontalAlignment="Left" Margin="20,152,0,152.04" TextWrapping="Wrap"><Run Language="de-de" Text="Password"/></TextBlock>
        	<s:SurfaceTextBox x:Name="SpotifyUsernameInput" Margin="20,91.96,24,0" TextWrapping="Wrap" Text="{Binding SpotifyUsernameInput}" VerticalAlignment="Top"/>
        	<s:SurfacePasswordBox x:Name="SpotifyPasswordInput" Height="23" Margin="20,0,24,110.04" VerticalAlignment="Bottom"/>
        	<s:SurfaceButton Content="Cancel" Margin="24,0,0,24" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="80">
        		<i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewTouchDown">
                        <ei:GoToStateAction StateName="LoginDialogInvisible"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Click">
        				<ei:GoToStateAction StateName="LoginDialogInvisible"/>
        			</i:EventTrigger>
        		</i:Interaction.Triggers>
        	</s:SurfaceButton>
        	<s:SurfaceButton Content="Login" Margin="0,0,24,24" VerticalAlignment="Bottom" HorizontalAlignment="Right" Command="{Binding LoginCommand}" CommandParameter="{Binding ElementName=SpotifyPasswordInput}" Width="76">
        		<i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewTouchDown">
                        <ei:GoToStateAction StateName="LoginDialogInvisible"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Click">
        				<ei:GoToStateAction StateName="LoginDialogInvisible"/>
        			</i:EventTrigger>
        		</i:Interaction.Triggers>
        	</s:SurfaceButton>
        </Grid>
        <Grid x:Name="OpenPlaylistDialog" HorizontalAlignment="Left" Margin="-568,80,0,488" Width="308" Background="#CC000000" RenderTransformOrigin="0.5,0.5" Height="Auto" VerticalAlignment="Stretch">
        	<Grid.RenderTransform>
        		<TransformGroup>
        			<ScaleTransform/>
        			<SkewTransform/>
        			<RotateTransform/>
        			<TranslateTransform/>
        		</TransformGroup>
        	</Grid.RenderTransform>
            <s:SurfaceButton HorizontalAlignment="Left" Margin="248,0,0,0" VerticalAlignment="Top" Command="{Binding RotateOpenPlaylistCommand}" Width="60" Height="60">
                <Image Opacity="1" Width="60" Height="60" Source="../../Resources/Images/Playlist/rotate-icon.png" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </s:SurfaceButton>
            <TextBlock Margin="0" TextWrapping="Wrap" VerticalAlignment="Top" HorizontalAlignment="Center" FontSize="18.667"><Run Language="de-de" Text="Choose Playlist"/></TextBlock>
            <s:SurfaceListBox ItemsSource="{Binding Playlists}" Margin="0,80,0,0" Height="368" VerticalAlignment="Top" Width="308">
                <s:SurfaceListBox.ItemTemplate>
                    <DataTemplate>
                        <s:SurfaceButton VerticalAlignment="Center" HorizontalAlignment="Center" Command="{Binding DataContext.OpenPlaylistCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}" Width="232">
                            <TextBlock TextWrapping="Wrap" Text="{Binding Name}"/>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewTouchDown">
                                    <ei:GoToStateAction StateName="OpenPlaylistDialogInvisible" TargetObject="{Binding ElementName=MenuViewUserControl}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Click">
                                    <ei:GoToStateAction StateName="OpenPlaylistDialogInvisible" TargetObject="{Binding ElementName=MenuViewUserControl}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </s:SurfaceButton>
                    </DataTemplate>
                </s:SurfaceListBox.ItemTemplate>
            </s:SurfaceListBox>
            <s:SurfaceButton Content="Cancel" Height="24.834" Margin="8,0,0,8" VerticalAlignment="Bottom" HorizontalAlignment="Left">
            	<i:Interaction.Triggers>
            		<i:EventTrigger EventName="Click">
            			<ei:GoToStateAction StateName="OpenPlaylistDialogInvisible"/>
            		</i:EventTrigger>
            	</i:Interaction.Triggers>
            </s:SurfaceButton>
        </Grid>
        <Grid x:Name="NewPlaylistDialog" HorizontalAlignment="Left" Height="224" Margin="-976,-272,0,0" VerticalAlignment="Top" Width="456" Background="Black" RenderTransformOrigin="0.5,0.5">
        	<Grid.RenderTransform>
        		<TransformGroup>
        			<ScaleTransform/>
        			<SkewTransform/>
        			<RotateTransform Angle="0"/>
        			<TranslateTransform/>
        		</TransformGroup>
        	</Grid.RenderTransform>
            <s:SurfaceButton HorizontalAlignment="Left" Margin="396,0,0,0" VerticalAlignment="Top" Command="{Binding RotateCreatePlaylistCommand}" Width="60" Height="60">
                <Image Opacity="1" Width="60" Height="60" Source="../../Resources/Images/Playlist/rotate-icon.png" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </s:SurfaceButton>
            <s:SurfaceTextBox x:Name="PlaylistNameInput" Margin="24,92,24,94" TextWrapping="Wrap" Text=""/>
        	<TextBlock Height="24" Margin="0,8,0,0" TextWrapping="Wrap" VerticalAlignment="Top" FontSize="18.667" HorizontalAlignment="Center"><Run Language="de-de" Text="Give it a name"/></TextBlock>
        	<s:SurfaceButton Content="Cancel" Height="24.834" Margin="24,0,0,24" VerticalAlignment="Bottom" HorizontalAlignment="Left">
        		<i:Interaction.Triggers>
        			<i:EventTrigger EventName="PreviewTouchDown">
        				<ei:GoToStateAction StateName="NewPlaylistDialogInvisible"/>
        			</i:EventTrigger>
                    <i:EventTrigger EventName="Click">
                        <ei:GoToStateAction StateName="NewPlaylistDialogInvisible"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
        	</s:SurfaceButton>
            <s:SurfaceButton Command="{Binding NewPlaylistCommand}" CommandParameter="{Binding ElementName=PlaylistNameInput}" Content="Create" Height="24.834" Margin="0,0,24,24" VerticalAlignment="Bottom" HorizontalAlignment="Right">
        		<i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewTouchDown">
                        <ei:GoToStateAction StateName="NewPlaylistDialogInvisible"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Click">
        				<ei:GoToStateAction StateName="NewPlaylistDialogInvisible"/>
        			</i:EventTrigger>
        		</i:Interaction.Triggers>
        	</s:SurfaceButton>
        </Grid>
    </Grid>
</UserControl>
