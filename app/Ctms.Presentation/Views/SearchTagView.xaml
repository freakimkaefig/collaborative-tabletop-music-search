<s:TagVisualization x:Class="Ctms.Presentation.Views.SearchTagView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:s="http://schemas.microsoft.com/surface/2008"
    xmlns:p="clr-namespace:Ctms.Presentation.Properties"
    xmlns:c="clr-namespace:Ctms.Presentation.Converters"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:waf="http://waf.codeplex.com/schemas"
    xmlns:vm="clr-namespace:Ctms.Applications.ViewModels;assembly=Ctms.Applications"
    xmlns:dm="clr-namespace:Ctms.Applications.DataModels;assembly=Ctms.Applications"
    xmlns:ps="clr-namespace:PieInTheSky;assembly=PieInTheSky"
    xmlns:nui="clr-namespace:Blake.NUI.WPF.Controls;assembly=Blake.NUI.WPF"
    Name="MyTagVisualization"
    IsEnabled="{Binding IsEnabled}"
    waf:ValidationHelper.IsValid="{Binding IsValid, Mode=OneWayToSource}"                    
    Loaded="SimpleVisualization_Loaded"
    Moved="TagVisualization_Moved" FontFamily="/Ctms;component/Resources/Fonts/#Open Sans Condensed Light">
    
    <s:TagVisualization.Resources>
        <c:BoolToVisibilityConverter x:Key="visibilityConverter"/>
        <DataTemplate x:Key="BreadcrumbTemplate">
            <Grid Grid.Row="2" Grid.ColumnSpan="3">
                <Grid.RowDefinitions>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Rectangle Fill="{StaticResource ResourceKey=arrowRight}" Width="10" Height="10" Grid.Column="0"
                                 Visibility="{DynamicResource IsMenuVisible}" />
                <s:SurfaceButton Content="{Binding Keyword.DisplayName}" 
                                 Command="{Binding DataContext.GoBreadcrumbCmd, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" 
                                 CommandParameter="{Binding Id}" 
                                 Background="#5000"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Visibility="{DynamicResource IsMenuVisible}"  
                                 Style="{StaticResource BreadcrumbBtn}" Grid.Column="1">
                    <s:SurfaceButton.RenderTransform>
                        <RotateTransform Angle="0" />
                    </s:SurfaceButton.RenderTransform>
                </s:SurfaceButton>
            </Grid>
        </DataTemplate>
        <sys:Double x:Key="PieMenuDiameter">275</sys:Double>
        <sys:Double x:Key="OuterLength">50</sys:Double>
        <sys:Double x:Key="InputLength">180</sys:Double>
    </s:TagVisualization.Resources>
    
    <!--Surrounding Tag Grid-->
    <Grid Name="TagGrid" 
        Background="{x:Null}" 
        DataContext="{DynamicResource TagDM}" RenderTransformOrigin="0.5, 0.5">

        <Grid.RenderTransform>
            <RotateTransform Angle="{Binding Tag.Orientation}"  />
        </Grid.RenderTransform>

        <Grid Background="{x:Null}" >
            <Grid.RowDefinitions>
                <!--Reference static resoure as binding so that DoubleToString-converter will be found-->
            	<RowDefinition Height="{Binding Source={StaticResource OuterLength}}"/>
            	<RowDefinition Height="{Binding Source={StaticResource PieMenuDiameter}}"/>
            	<RowDefinition Height="{Binding Source={StaticResource OuterLength}}"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
            	<ColumnDefinition Width="{Binding Source={StaticResource OuterLength}}"/>
            	<ColumnDefinition Width="{Binding Source={StaticResource PieMenuDiameter}}"/>
            	<ColumnDefinition Width="{Binding Source={StaticResource OuterLength}}"/>
            </Grid.ColumnDefinitions>

            <!--Grid for circle penu-->
        	<Grid Grid.Row="1" Grid.Column="1"
        		Visibility="{DynamicResource IsCircleMenuVisible}" 
        		Height="{StaticResource PieMenuDiameter}"
        		Background="{x:Null}" 
        		Width="{StaticResource PieMenuDiameter}"
        		DataContext="{DynamicResource TagDM}">

        		<Grid.RowDefinitions>
        			<RowDefinition/>
        		</Grid.RowDefinitions>

        		<Grid.ColumnDefinitions>
        			<ColumnDefinition/>
        		</Grid.ColumnDefinitions>

                <Image RenderTransformOrigin="0.5, 0.5" Margin="-4,-2,0,0"
				    Source="{Binding BackgrImageSource}" Opacity="1.0" Stretch="Fill"
        			Height="265" 
        			Width="265">
                    <Image.RenderTransform>
                        <RotateTransform Angle="{Binding RotationAngle}" />
                    </Image.RenderTransform>
                </Image>

                <Image Margin="-150, 70,0,0"
				    Source="../Resources/Images/Common/icons/spiral_edge.png"
        			Height="63" 
        			Width="207"
                    />

                <!--Start PieMenu with tag options-->
        		<ps:PieMenu 
        			x:Name="PieMenu"
        			Canvas.Left="100"
        			Canvas.Top="100"
        			SelectedBackground="#7399"
        			Foreground="White"
        			SectorGap="0"
        			Gap="0"
        			Radius="135"
        			InnerRadius="33"
        			RotateText="True"
        			RotateTextAngle="0"
        			Rotation="120"
        			MainAngle="120"
        			Background="{x:Null}"
        			Grid.Row="0"
        			Grid.Column="0"
        			Visibility="{DynamicResource IsCircleMenuVisible}">
                    <!-- placeholder item for correct calculation of PieMenuItem size -->
        			<ps:PieMenuItem Header="" SubHeader="" BorderThickness="0" 
        				Command="" Background="#0000" />
                </ps:PieMenu>

            </Grid>
            <!--Grid for keyword type selection-->
        	<Grid Grid.Row="1" 
        			Background="{x:Null}" Grid.Column="1" DataContext="{DynamicResource TagDM}"
        		Visibility="{Binding IsKeywordTypesVisible, Converter={StaticResource visibilityConverter}}">
        		<Grid.RowDefinitions>
        			<RowDefinition/>
        			<RowDefinition/>
        		</Grid.RowDefinitions>

        		<Grid.ColumnDefinitions>
        			<ColumnDefinition/>
        			<ColumnDefinition/>
        		</Grid.ColumnDefinitions>
                
        		<s:SurfaceButton DataContext="{DynamicResource SearchVM}"
        			Grid.Row="0"
        			Grid.Column="0"
        			Command="{Binding SelectAttributeCmd}" 
        			CommandParameter="{DynamicResource TagId}"
        			Style="{StaticResource SearchViewBtn}"
        			Background="{StaticResource ResourceKey=gear2}" Margin="1,-1,0,0"
                                />
                
        		<s:SurfaceButton DataContext="{DynamicResource SearchVM}"
        			Grid.Row="0" 
        			Grid.Column="1"
        			Command="{Binding SelectGenreCmd}" 
        			CommandParameter="{DynamicResource TagId}"
        			Style="{StaticResource SearchViewBtn}"
        			Background="{StaticResource ResourceKey=genre2}" Margin="1,-1,0,0"
                                 />
                
        		<s:SurfaceButton DataContext="{DynamicResource SearchVM}"
        			Grid.Row="1" 
        			Grid.Column="0"
        			Command="{Binding SelectTitleCmd}" 
        			CommandParameter="{DynamicResource TagId}"
        			Style="{StaticResource SearchViewBtn}"
        			Background="{StaticResource ResourceKey=title2}" Margin="1,-1,0,0"
                                 />
                
        		<s:SurfaceButton DataContext="{DynamicResource SearchVM}"
        			Grid.Row="1" 
        			Grid.Column="1"
        			Command="{Binding SelectArtistCmd}" 
        			CommandParameter="{DynamicResource TagId}"
        			Style="{StaticResource SearchViewBtn}"
        			Background="{StaticResource ResourceKey=artist2}" Margin="1,-1,0,0"
                                 />
        	</Grid>
            <!--Input and hint-->
        	<Grid x:Name="InputGrid" 
        			Background="{x:Null}" Grid.Row="1" Grid.ColumnSpan="3" DataContext="{DynamicResource TagDM}"
        		Visibility="{Binding IsInputVisible, Converter={StaticResource visibilityConverter}}">
        		<Grid.RowDefinitions>
        			<RowDefinition Height="180"/>
        			<RowDefinition Height="Auto"/>
        			<RowDefinition Height="Auto"/>
        		</Grid.RowDefinitions>

        		<Grid.ColumnDefinitions>
        			<ColumnDefinition/>
        			<ColumnDefinition/>
        			<ColumnDefinition/>
        		</Grid.ColumnDefinitions>

        		<Grid Grid.Row="1" Grid.ColumnSpan="3" Background="#5000" >                    
        			<TextBlock  
        				Background="{x:Null}"
        				DataContext="{DynamicResource TagDM}" 
        				x:Name="InputType" Text="{Binding InputTypeHint}" 
        				Visibility="{Binding IsInputVisible, Converter={StaticResource visibilityConverter}}"
        				HorizontalAlignment="Center"
        				VerticalAlignment="Center"
        				Margin="5"
        				TextWrapping="Wrap"
        				TextTrimming="CharacterEllipsis"
        				FontSize="13"/>
        		</Grid>
                
        		<!--//Input field-->
        <!--Input field-->
        		<Grid DataContext="{DynamicResource TagDM}" 
        			Visibility="{Binding IsInputVisible, Converter={StaticResource visibilityConverter}}"
        			HorizontalAlignment="Center"
        			VerticalAlignment="Top"
        			Background="{x:Null}"
        			Grid.Row="2"
        			Grid.ColumnSpan="3">
        			<Grid.ColumnDefinitions>
        				<ColumnDefinition Width="Auto" />
        				<ColumnDefinition Width="Auto" />
        				<ColumnDefinition Width="Auto" />
        				<ColumnDefinition Width="Auto" />
        			</Grid.ColumnDefinitions>

        			<s:SurfaceButton DataContext="{DynamicResource TagDM}"
        				Visibility="{Binding IsInputControlVisible, Converter={StaticResource visibilityConverter}}"
        				Command="{Binding DataContext.LowerInputCmd, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" 
        				CommandParameter="{DynamicResource TagId}" 
        				Background="{StaticResource ResourceKey=minus}"   
        				Grid.Column="0"      
                        />

        			<s:SurfaceTextBox x:Name="InputTextBox"
        				DataContext="{DynamicResource TagDM}"
        				Text="{Binding InputTerms, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" 
        				Width="{StaticResource InputLength}" 
        				Grid.Column="1" 
        				Padding="0"
        				FontSize="14"
        				Height="25"
        				Style="{StaticResource CommonStyle}"
                        />

        			<s:SurfaceButton DataContext="{DynamicResource TagDM}"
        				Visibility="{Binding IsInputControlVisible, Converter={StaticResource visibilityConverter}}"
        				Command="{Binding DataContext.RaiseInputCmd, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" 
        				CommandParameter="{DynamicResource TagId}"
        				Background="{StaticResource ResourceKey=plus}" 
        				Grid.Column="2" 
                        />

        			<s:SurfaceButton DataContext="{DynamicResource SearchVM}"
        				Command="{Binding ConfirmInputCmd}" 
        				CommandParameter="{DynamicResource TagId}"  
        				Style="{StaticResource SearchViewBtn}"
        				Background="{StaticResource ResourceKey=checkmark}" 
        				Grid.Column="3" 
                        />

        		</Grid>
                
        	</Grid>
            <!--Start Menu Controls-->
        	<s:SurfaceButton DataContext="{DynamicResource SearchVM}"
        		HorizontalAlignment="Left" 
        		Grid.Row="1" 
        		Grid.Column="1"
        		Command="{Binding EditCmd}" 
        		CommandParameter="{DynamicResource TagId}"
        		Visibility="{DynamicResource IsEditVisible}"
        		Style="{StaticResource SearchViewBtn}"
        		Background="{StaticResource ResourceKey=edit}" Margin="50,96.333,0,95.667"/>

                <!--Breadcrumb-->
        	<s:SurfaceButton DataContext="{DynamicResource SearchVM}"
        		HorizontalAlignment="Left" 
        		Grid.Row="0" 
        		Grid.Column="0"
        		Command="{Binding GoHomeCmd}" 
        		CommandParameter="{DynamicResource TagId}"
        		Visibility="{DynamicResource IsMenuVisible}"
        		Style="{StaticResource SearchViewBtn}"
        		Background="{StaticResource ResourceKey=home}"
                                     />
            
        	<ItemsControl ItemTemplate="{DynamicResource BreadcrumbTemplate}"  
        		ItemsSource="{DynamicResource BreadcrumbOptions}"
        		Grid.Row="0"
        		Grid.Column="1"
        		Background="{x:Null}"
        		Grid.ColumnSpan="2">
        		<ItemsControl.ItemsPanel>
        			<ItemsPanelTemplate>
        				<StackPanel Orientation="Horizontal"/>
        			</ItemsPanelTemplate>
        		</ItemsControl.ItemsPanel>
        	</ItemsControl>
                <!--Rotated assigned keyword-->
        	<Grid   Grid.ColumnSpan="3" Grid.Row="1"
        			Background="{x:Null}" IsHitTestVisible="True"
        			VerticalAlignment="Bottom" Margin="0,0,0,55" HorizontalAlignment="Stretch">
        		<Grid.RowDefinitions>
        			<RowDefinition Height="Auto" />
        			<RowDefinition Height="Auto"/>
        		</Grid.RowDefinitions>
        		<TextBlock Grid.Row="0"
                                HorizontalAlignment="Center"
        						Background="{x:Null}"
                                DataContext="{DynamicResource TagDM}"
                                Visibility="{Binding IsAssignedKeywordVisible, Converter={StaticResource visibilityConverter}}"
                                Text="{Binding Tag.AssignedKeyword.DisplayName, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                                TextWrapping="Wrap"
                                Style="{StaticResource AssignedKeyword}"
                                Width="Auto">
                        </TextBlock>

                <TextBlock  Grid.Row="1"
                    HorizontalAlignment="Center"
                    DataContext="{DynamicResource TagDM}"
                    Visibility="{Binding IsAssignedKeywordVisible, Converter={StaticResource visibilityConverter}}"
                    Text="{Binding Tag.AssignedKeyword.Value, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                    TextWrapping="Wrap"
                    Style="{StaticResource AssignedKeyword}"
                    Width="Auto">
                </TextBlock>
            </Grid>
                <!--Not rotated assigned keyword-->
        	<Grid Grid.ColumnSpan="3" Grid.Row="1"
        			Background="{x:Null}"
        		VerticalAlignment="Top" Margin="0,55,0,0" HorizontalAlignment="Stretch" >
        		<Grid.RowDefinitions>
        			<RowDefinition Height="Auto"/>
        			<RowDefinition Height="Auto"/>
        		</Grid.RowDefinitions>

                <TextBlock  Grid.Row="1"
        			Background="{x:Null}"
        			HorizontalAlignment="Center"
        			DataContext="{DynamicResource TagDM}"
        			Visibility="{Binding IsAssignedKeywordVisible, Converter={StaticResource visibilityConverter}}"
        			Text="{Binding Tag.AssignedKeyword.DisplayName, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"
        			TextWrapping="Wrap"
        			Style="{StaticResource AssignedKeyword}"
        			RenderTransformOrigin="0.5, 0.5"
        			Width="Auto">
        			<TextBlock.RenderTransform>
        				<RotateTransform Angle="180" />
        			</TextBlock.RenderTransform>
                </TextBlock>

                <TextBlock  Grid.Row="0"
        			Background="{x:Null}"
                    HorizontalAlignment="Center"
                    DataContext="{DynamicResource TagDM}"
                    Visibility="{Binding IsAssignedKeywordVisible, Converter={StaticResource visibilityConverter}}"
                    Text="{Binding Tag.AssignedKeyword.Value, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                    TextWrapping="Wrap"
        			RenderTransformOrigin="0.5, 0.5"
                    Style="{StaticResource AssignedKeyword}"
                    Width="Auto">
        			<TextBlock.RenderTransform>
        				<RotateTransform Angle="180" />
        			</TextBlock.RenderTransform>
                </TextBlock>
        	</Grid>

        </Grid>

        <!-- Start menu -->
        <!-- End menu -->

        <!--Tag color circle-->
        <Ellipse Name="TagColor"
                 DataContext="{DynamicResource TagDM}"
                 Width="75" Height="75" 
                 Stroke="{Binding TagColor}"
                 StrokeThickness="10" 
                 Fill="{x:Null}">
            <Ellipse.Effect>
                <BlurEffect Radius="5"/>
            </Ellipse.Effect>
        </Ellipse>

        <Image        
        	Style="{StaticResource LoadingCircleInverted}"
            DataContext="{DynamicResource TagDM}"
        	Visibility="{Binding IsLoadingInfoVisible, Converter={StaticResource visibilityConverter}}"
        	Height="85" Width="85"
            Margin="0,0,0,5"
        	HorizontalAlignment="Center" VerticalAlignment="Center"
            Opacity="0.9" RenderTransformOrigin="0.5,0.5">
            <Image.RenderTransform>
                <RotateTransform Angle="180" />
            </Image.RenderTransform>
        </Image>

        <!--//Tag color circle-->
    </Grid>
    <!--End Surrounding Tag grid-->
</s:TagVisualization>